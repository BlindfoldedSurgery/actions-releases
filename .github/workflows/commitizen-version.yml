on:
  workflow_call:
    inputs:
      build-tool:
        type: string
        default: poetry
      build-tool-version:
        type: string
        required: false
      python-version:
        type: string
        default: '3.11'
    outputs:
      version:
        value: ${{ jobs.version.outputs.version }}

jobs:
  version:
    runs-on: ubuntu-24.04
    env:
      # renovate: datasource=pypi depName=poetry versioning=semver-coerced
      POETRY_VERSION: 2.1.2
      # renovate: datasource=pypi depName=uv versioning=semver-coerced
      UV_VERSION: 0.6.13
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - run: pipx install poetry==${{ inputs.build-tool-version || env.POETRY_VERSION }}
        if: inputs.build-tool == 'poetry'
      - uses: actions/checkout@v4
      - name: Install uv
        if: inputs.build-tool == 'uv'
        uses: astral-sh/setup-uv@v5
        with:
          cache-suffix: actions-releases
          version: ${{ inputs.build-tool-version || env.UV_VERSION }}
      - run: poetry install --all-extras --no-interaction --no-ansi
        if: inputs.build-tool == 'poetry'
      - run: uv sync
        if: inputs.build-tool == 'uv'
      - id: version
        run: |
          version=$(${{ inputs.build-tool }} run cz version --project)
          echo "version=$version" >> "$GITHUB_OUTPUT"
